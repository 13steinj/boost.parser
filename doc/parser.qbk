[/
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]

[library Boost.Parser
    [quickbook 1.3]
    [authors [Laine, Zach]]
    [copyright 2020 T. Zachary Laine]
    [category template]
    [id parser]
    [dirname parser]
    [purpose
        A string and rope library targeting standardization.
    ]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[/ QuickBook Document version 1.3 ]

[/ Imports ]

[/ Examples ]
[import ../example/hello.cpp]
[import ../example/trivial.cpp]
[import ../example/trivial_skipper.cpp]
[import ../example/semantic_actions.cpp]
[import ../example/roman_numerals.cpp]
[import ../example/self_filling_symbol_table.cpp]

[import ../include/boost/parser/error_handling_fwd.hpp]

[/ Images ]

[def __note__              [$images/note.png]]
[def __tip__               [$images/tip.png]]
[def __important__         [$images/important.png]]
[def __caution__           [$images/caution.png]]
[def __warning__           [$images/warning.png]]

[/ Links ]

[def _Parser_              Boost.Parser]

[def _v_                   [classref boost::parser::view `view`]]
[def _n_                   [classref boost::parser::none `none`]]
[def _symbols_             [classref boost::parser::symbols `symbols`]]
[def _symbols_t_           [classref boost::parser::symbols `symbols<T>`]]

[def _p_                   [funcref boost::parser::parse `parse()`]]
[def _cbp_                 [funcref boost::parser::callback_parse `callback_parse()`]]

[def _attr_                [funcref boost::parser::_attr `_attr()`]]
[def _val_                 [funcref boost::parser::_val `_val()`]]
[def _pass_                [funcref boost::parser::_pass `_pass()`]]
[def _begin_               [funcref boost::parser::_begin `_begin()`]]
[def _end_                 [funcref boost::parser::_end `_end()`]]
[def _where_               [funcref boost::parser::_where `_where()`]]
[def _globals_             [funcref boost::parser::_globals `_globals()`]]
[def _locals_              [funcref boost::parser::_locals `_locals()`]]
[def _params_              [funcref boost::parser::_params `_params()`]]
[def _error_handler_       [funcref boost::parser::_error_handler `_error_handler()`]]
[def _report_error_        [funcref boost::parser::_report_error `_report_error()`]]
[def _report_warning_      [funcref boost::parser::_report_warning `_report_warning()`]]

[def _lit_np_              [funcref boost::parser::lit `lit`]]
[def _str_np_              [funcref boost::parser::string `str`]]
[def _attr_np_             [funcref boost::parser::attr `attr`]]

[def _lit_                 [funcref boost::parser::lit `lit()`]]
[def _str_                 [funcref boost::parser::string `str()`]]
[def _attr_                [funcref boost::parser::attr `attr()`]]

[def _e_                   [globalref boost::parser::eps `eps`]]
[def _eol_                 [globalref boost::parser::eol `eol`]]
[def _eoi_                 [globalref boost::parser::eoi `eoi`]]
[def _ch_                  [globalref boost::parser::char_ `char_`]]
[def _cp_                  [globalref boost::parser::cp `cp`]]
[def _cu_                  [globalref boost::parser::cu `cu`]]
[def _b_                   [globalref boost::parser::bool_ `bool_`]]

[def _bin_                 [globalref boost::parser::bin `bin`]]
[def _oct_                 [globalref boost::parser::oct `oct`]]
[def _hex_                 [globalref boost::parser::hex `hex`]]

[def _us_                  [globalref boost::parser::ushort_ `ushort_`]]
[def _ui_                  [globalref boost::parser::uint_ `uint_`]]
[def _ul_                  [globalref boost::parser::ulong_ `ulong_`]]
[def _ull_                 [globalref boost::parser::ulong_long `ulong_long`]]

[def _s_                   [globalref boost::parser::short_ `short_`]]
[def _i_                   [globalref boost::parser::int_ `int_`]]
[def _l_                   [globalref boost::parser::long_ `long_`]]
[def _ll_                  [globalref boost::parser::long_long `long_long`]]

[def _f_                   [globalref boost::parser::float_ `float_`]]
[def _d_                   [globalref boost::parser::double_ `double_`]]

[def _omit_                [globalref boost::parser::omit `omit[]`]]
[def _raw_                 [globalref boost::parser::raw `raw[]`]]
[def _lexeme_              [globalref boost::parser::lexeme `lexeme[]`]]

[def _omit_np_             [globalref boost::parser::omit `omit`]]
[def _raw_np_              [globalref boost::parser::raw `raw`]]
[def _lexeme_np_           [globalref boost::parser::lexeme `lexeme`]]

[def _kl_                  [@https://en.wikipedia.org/wiki/Kleene_star Kleene star]]
[def _comb_                [@https://en.wikipedia.org/wiki/Parser_combinator parser combinator]]
[def _udl_                 [@https://en.cppreference.com/w/cpp/language/user_literal UDL]]
[def _udls_                [@https://en.cppreference.com/w/cpp/language/user_literal UDLs]]

[def _Spirit_              [@https://www.boost.org/doc/libs/release/libs/spirit Boost.Spirit]]

[def _emdash_              \u2014]

[include intro.qbk]
[include tutorial.qbk]
[include examples.qbk]

[section Compiler Support]

TODO

[endsect]

[xinclude parser_reference.xml]

[include rationale.qbk]
